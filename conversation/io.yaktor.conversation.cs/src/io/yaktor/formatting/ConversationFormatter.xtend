/*
 * generated by Xtext
 */
package io.yaktor.formatting

import com.google.inject.Inject
import io.yaktor.services.ConversationGrammarAccess
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class ConversationFormatter extends AbstractDeclarativeFormatter {

  @Inject extension ConversationGrammarAccess

  override protected configureFormatting(FormattingConfig c) {

    c.setAutoLinewrap(120);
    c.setWrappedLineIndentation(1);
    for (pair : findKeywordPairs('{', '}')) {
      c.setIndentation(pair.first, pair.second)
      c.setLinewrap(1).after(pair.first)
      c.setLinewrap(1).before(pair.second)
      c.setLinewrap(1).after(pair.second)
    }

    for (punct : findKeywords(',', ';')) {
      c.setNoLinewrap().before(punct)
      c.setNoSpace().before(punct)
      c.setLinewrap().after(punct)
    }
    for (punct : findKeywords(':')) {
      c.setNoLinewrap().before(punct)
      c.setNoSpace().before(punct)
      c.setNoLinewrap().after(punct)
    }

    //Cardinality
    c.setNoLinewrap().before(cardinalityRule)
    c.setNoSpace().before(cardinalityRule)
    //c.setNoLinewrap().after(cardinalityRule)

    //Line Wrap Only
    c.setLinewrap(0, 1, 10).before(SL_COMMENTRule)
    c.setLinewrap(0, 1, 10).before(ML_COMMENTRule)
    c.setLinewrap(0, 1, 1).after(SL_COMMENTRule)
    c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
    
    c.setLinewrap(1, 1, 2).after(initialPubliclySubscribableRule);
    c.setLinewrap(1, 1, 2).after(subsequentPubliclySubscribableRule);
    c.setLinewrap(1, 1, 2).after(initialPublicPubSubRule);
    c.setLinewrap(1, 1, 2).after(subsequentPublicPubSubRule);
    c.setLinewrap(1, 1, 2).before(internalTransitionRule);
    c.setLinewrap(1, 1, 2).before(transitionRule);
    c.setLinewrap(0, 1, 2).before(fieldRule);
    c.setLinewrap(1, 2, 2).before(agentRule);
    c.setLinewrap(1, 1, 2).before(agentImportRule);
    c.setLinewrap(1, 1, 2).before(typeImportRule);
    c.setLinewrap(1, 1, 2).before(topLevelProjectionRule);
    c.setLinewrap(1, 1, 2).before(projectionFieldRule);

    c.setLinewrap(1, 2, 2).before(stateMachineRule);
    c.setLinewrap(1, 1, 2).before(viewRule);
    
    c.setNoLinewrap().after(findKeywords("initially").head)

    // REST
    c.setLinewrap(1, 1, 2).before(restServiceRule)
    c.setNoLinewrap().after(restDocumentTypeRule)
    c.setNoLinewrap().after(restAccessRule)
    c.setNoLinewrap().after(accessRequirementRule)

    for (word : findKeywords('interchanges', 'offers','at')) {
      c.setNoLinewrap().around(word)
    }
  }
}
